<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NativeFindFile</name>
    </assembly>
    <members>
        <member name="T:NativeFindFile.ArgParser">
            <summary>
            A command line argument parsing class.
            </summary>
            <remarks>
            This class is based on the WordCount version from the Framework SDK
            samples.  Any errors are mine.
            <para>
            There are two arrays of flags you'll pass to the constructors.  The
            flagSymbols are supposed to be standalone switches that toggle an option
            on.  The dataSymbols are for switches that take data values.  For
            example, if your application needs a switch, -c, to set the count,
            you'd put "c" in the dataSymbols.  This code will allow both "-c100" and
            the usual "-c" "100" both to be passed on the command line.  Note that
            you can pass null/Nothing for dataSymbols if you don't need them.
            </para>
            </remarks>
        </member>
        <member name="F:NativeFindFile.ArgParser.switchChars">
            <summary>For example: "/", "-".</summary>
        </member>
        <member name="F:NativeFindFile.ArgParser.flagSymbols">
            <summary>Switch character(s) that are simple flags.</summary>
        </member>
        <member name="F:NativeFindFile.ArgParser.dataSymbols">
            <summary>Switch characters(s) that take parameters. For example: -f file. This can be null if not needed.</summary>
        </member>
        <member name="F:NativeFindFile.ArgParser.caseSensitiveSwitches">
            <summary>
            Are switches case-sensitive?
            </summary>
        </member>
        <member name="M:NativeFindFile.ArgParser.#ctor(System.String[],System.String[],System.Boolean)">
            <summary>Initializes a new instance of the ArgParser class and defaults to
            "/" and "-" as the only valid switch characters.</summary>
            <param name="flagSymbols">The array of simple flags to toggle options on or off.</param>
            <param name="dataSymbols">The array of options that need data either in the next parameter or
            after the switch itself.  This value can be null/Nothing.</param>
            <param name="caseSensitiveSwitches">True if case sensitive switches are supposed to be used.</param>
        </member>
        <member name="M:NativeFindFile.ArgParser.#ctor(System.String[],System.String[],System.Boolean,System.String[])">
            <summary>
            Initializes a new instance of the ArgParser class with all options
            specified by the caller.
            </summary>
            <param name="flagSymbols">
            The array of simple flags to toggle options on or off.
            </param>
            <param name="dataSymbols">
            The array of options that need data either in the next parameter or
            after the switch itself.  This value can be null/Nothing.
            </param>
            <param name="caseSensitiveSwitches">
            True if case sensitive switches are supposed to be used.
            </param>
            <param name="switchChars">
            The array of switch characters to use.
            </param>
            <exception cref="T:System.ArgumentException">
            Thrown if <paramref name="flagSymbols"/> or
            <paramref name="switchChars"/> are invalid.
            </exception>
        </member>
        <member name="T:NativeFindFile.ArgParser.SwitchStatus">
            <summary>
            The status values for various internal methods.
            </summary>
        </member>
        <member name="F:NativeFindFile.ArgParser.SwitchStatus.NoError">
            <summary>Indicates all parsing was correct.</summary>
        </member>
        <member name="F:NativeFindFile.ArgParser.SwitchStatus.Error">
            <summary>There was a problem.</summary>
        </member>
        <member name="F:NativeFindFile.ArgParser.SwitchStatus.ShowUsage">
            <summary>Show the usage help.</summary>
        </member>
        <member name="M:NativeFindFile.ArgParser.OnUsage(System.String)">
            <summary>Reports correct command line usage.</summary>
            <param name="errorInfo">The string with the invalid command line option.</param>
        </member>
        <member name="M:NativeFindFile.ArgParser.Parse(System.String[])">
            <summary>Parses an arbitrary set of arguments.</summary>
            <param name="args">The string array to parse through.</param>
            <returns>True if parsing was correct.</returns>
            <exception cref="T:System.ArgumentException"> thrown if <paramref name="args"/> is null.</exception>
        </member>
        <member name="M:NativeFindFile.ArgParser.OnSwitch(System.String,System.String)">
            <summary>Called when a switch is parsed out.</summary>
            <param name="switchSymbol">The switch value parsed out.</param>
            <param name="switchValue">The value of the switch. For flag switches this is null/Nothing.</param>
            <returns>One of the <see cref="T:NativeFindFile.ArgParser.SwitchStatus" /> values.</returns>
            <remarks>Every derived class must implement an OnSwitch method or a switch is considered an error.</remarks>
        </member>
        <member name="M:NativeFindFile.ArgParser.OnNonSwitch(System.String)">
            <summary>Called when a non-switch value is parsed out.</summary>
            <param name="value">The value parsed out.</param>
            <returns>One of the <see cref="T:NativeFindFile.ArgParser.SwitchStatus" /> values.</returns>
        </member>
        <member name="M:NativeFindFile.ArgParser.OnDoneParse">
            <summary>Called when parsing is finished so final sanity checking can be performed.</summary>
            <returns>One of the <see cref="T:NativeFindFile.ArgParser.SwitchStatus"/> values.</returns>
        </member>
        <member name="M:NativeFindFile.ArgParser.IsSwitchInArray(System.String[],System.String)">
            <summary>Looks to see if the switch is in the array.</summary>
            <param name="switchArray">The switch array.</param>
            <param name="value">The value.</param>
            <returns>The index of the switch.</returns>
        </member>
        <member name="M:NativeFindFile.ArgParser.StartsWithSwitchChar(System.String)">
            <summary>Looks to see if this string starts with a switch character.</summary>
            <param name="value">The string to check.</param>
            <returns>True if the string starts with a switch character.</returns>
        </member>
        <member name="T:NativeFindFile.FastFindArgumentParser">
            <summary>
            Implements the command line parsing for the Fast Find program.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.PathFlag">
            <summary>
            The path flag.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.PathFlagShort">
            <summary>
            The path flag short.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.RegExFlag">
            <summary>
            The use regular expressions flag.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.RegExFlagShort">
            <summary>
            The short use regular expressions flag.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.IncludeDirectoryName">
            <summary>
            The only files flag.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.IncludeDirectoryNameShort">
            <summary>
            The short only files flag short.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.NoStats">
            <summary>
            The no statistics flag.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.NoStatsShort">
            <summary>
            The short no stats flag.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.HelpFlag">
            <summary>
            The help flag.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.HelpFlagShort">
            <summary>
            The short help flag.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.rawPatterns">
            <summary>
            The raw patterns as they come in from the command line.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.errorMessage">
            <summary>
            The private string to hold more detailed error information.
            </summary>
        </member>
        <member name="F:NativeFindFile.FastFindArgumentParser.useRegEx">
            <summary>Wheter to use regular expressions or not.</summary>
        </member>
        <member name="M:NativeFindFile.FastFindArgumentParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NativeFindFile.FastFindArgumentParser"/> class.
            </summary>
        </member>
        <member name="P:NativeFindFile.FastFindArgumentParser.Path">
            <summary>
            Gets the path to search. The default is the current directory.
            </summary>
        </member>
        <member name="P:NativeFindFile.FastFindArgumentParser.IncludeDirectories">
            <summary>
            Gets a value indicating whether the user only wants to include the
            directory name as part of the search.
            </summary>
        </member>
        <member name="P:NativeFindFile.FastFindArgumentParser.NoStatistics">
            <summary>
            Gets a value indicating whether the user wants to see the final
            search stats.
            </summary>
        </member>
        <member name="P:NativeFindFile.FastFindArgumentParser.Patterns">
            <summary>
            Gets the patterns to search for.
            </summary>
        </member>
        <member name="M:NativeFindFile.FastFindArgumentParser.OnUsage(System.String)">
            <summary>
            Reports correct command line usage.
            </summary>
            <param name="errorInfo">
            The string with the invalid command line option.
            </param>
        </member>
        <member name="M:NativeFindFile.FastFindArgumentParser.OnSwitch(System.String,System.String)">
            <summary>
            Called when a switch is parsed out.
            </summary>
            <param name="switchSymbol">
            The switch value parsed out.
            </param>
            <param name="switchValue">
            The value of the switch. For flag switches this is null/Nothing.
            </param>
            <returns>
            One of the <see cref="T:NativeFindFile.ArgParser.SwitchStatus"/> values.
            </returns>
        </member>
        <member name="M:NativeFindFile.FastFindArgumentParser.OnNonSwitch(System.String)">
            <summary>
            Called when a non-switch value is parsed out.
            </summary>
            <param name="value">
            The value parsed out.
            </param>
            <returns>
            One of the <see cref="T:NativeFindFile.ArgParser.SwitchStatus"/> values.
            </returns>
        </member>
        <member name="M:NativeFindFile.FastFindArgumentParser.OnDoneParse">
            <summary>
            Called when parsing is finished so final sanity checking can be
            performed.
            </summary>
            <returns>
            One of the <see cref="T:NativeFindFile.ArgParser.SwitchStatus"/> values.
            </returns>
        </member>
        <member name="M:NativeFindFile.FastFindArgumentParser.TestPath(System.String)">
            <summary>
            Isolates the checking for the path parameter.
            </summary>
            <param name="pathToTest">
            The path value to test.
            </param>
            <returns>
            A valid <see cref="!:SwitchStatus"/> value.
            </returns>
        </member>
        <member name="T:NativeFindFile.NativeMethods">
            <summary>
            Wrappers around all native Win32 API calls.
            </summary>
        </member>
        <member name="T:NativeFindFile.Program">
            <summary>
            The entry point to the application.
            </summary>
        </member>
        <member name="F:NativeFindFile.Program.Options">
            <summary>
            Holds the command line options the user wanted.
            </summary>
        </member>
        <member name="F:NativeFindFile.Program.totalMatches">
            <summary>
            The total number of matching files and directories.
            </summary>
        </member>
        <member name="F:NativeFindFile.Program.totalMatchesSize">
            <summary>
            The total number of bytes the matching file consume.
            </summary>
        </member>
        <member name="F:NativeFindFile.Program.totalFiles">
            <summary>
            The total number of files looked at.
            </summary>
        </member>
        <member name="F:NativeFindFile.Program.totalDirectories">
            <summary>
            The total number of directories looked at.
            </summary>
        </member>
        <member name="F:NativeFindFile.Program.totalReparses">
            <summary>
            The total number of reparse points.
            </summary>
        </member>
        <member name="F:NativeFindFile.Program.totalSize">
            <summary>
            The total number of bytes the files looked at consume.
            </summary>
        </member>
        <member name="F:NativeFindFile.Program.ResultsQueue">
            <summary>
            The collection to hold found strings so they can be printed in batch mode.
            </summary>
        </member>
        <member name="M:NativeFindFile.Program.Main(System.String[])">
            <summary>
            The entry point function for the program.
            </summary>
            <param name="args">
            The command line arguments for the program.
            </param>
            <returns>
            0 - Proper execution
            1 - Invalid command line.
            </returns>
        </member>
        <member name="M:NativeFindFile.Program.WriteError(System.String,System.Object[])">
            <summary>
            Writes a error message to the screen.
            </summary>
            <param name="message">
            The message to report.
            </param>
            <param name="args">
            Any additional items to include in the output.
            </param>
        </member>
        <member name="M:NativeFindFile.Program.WriteError(System.String)">
            <summary>
            Writes an error message to the screen.
            </summary>
            <param name="message">
            The message to write.
            </param>
        </member>
        <member name="M:NativeFindFile.Program.ColorWriteLine(System.ConsoleColor,System.String,System.Object[])">
            <summary>
            Writes the text out in the specified foreground color.
            </summary>
            <param name="color">
            The foreground color to use.
            </param>
            <param name="message">
            The message to display.
            </param>
            <param name="args">
            Optional insertion arguments.
            </param>
        </member>
        <member name="M:NativeFindFile.Program.IsNameMatch(System.String)">
            <summary>Checks to see if the name matches and of the patterns.</summary>
            <param name="name">The name to match.</param>
            <returns>True if yes, false otherwise.</returns>
        </member>
        <member name="M:NativeFindFile.Program.WriteResultsBatched(System.Threading.CancellationToken,System.Int32)">
            <summary>Takes care of writing out results found in a batch manner so slow calls to Console.WriteLine are minimized.</summary>
            <param name="canceller">The cancellation token.</param>
            <param name="batchSize">The batch size for the number of lines to write.</param>
        </member>
        <member name="M:NativeFindFile.Program.QueueConsoleWriteLine(System.String)">
            <summary>The method to call when a matching file/directory is found.</summary>
            <param name="line">The matching item to add to the output queue.</param>
        </member>
        <member name="M:NativeFindFile.Program.RecurseFiles(System.String)">
            <summary>The main method that does the recursive file matching.</summary>
            <param name="directory">The file directory to search.</param>
            <remarks>This method calls the low level Windows API because the built in .NET APIs do not support long file names. (Those greater than 260 characters).</remarks>
        </member>
        <member name="T:NativeFindFile.Properties.Constants">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.ArrayMustBeValid">
            <summary>
              Looks up a localized string similar to The array must not be null or of zero length..
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.ErrorSwitch">
            <summary>
              Looks up a localized string similar to Error on the &apos;{0}&apos; switch..
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.InvalidParameter">
            <summary>
              Looks up a localized string similar to An invalid parameter was passed to the method..
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.InvalidRegExFmt">
            <summary>
              Looks up a localized string similar to &quot;Invalid regular expression: &apos;{0}&apos; Error : {1}&quot;.
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.NoPatternsSpecified">
            <summary>
              Looks up a localized string similar to No search patterns were specified..
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.PathMultipleSwitches">
            <summary>
              Looks up a localized string similar to Only one -path switch at a time may be used..
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.PathNotExist">
            <summary>
              Looks up a localized string similar to The path directory does not exist or ends in &apos;\&apos; which Windows command line parsing does not like..
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.TotalDirectoriesFmt">
            <summary>
              Looks up a localized string similar to Total directories processed : {0}.
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.TotalFilesFmt">
            <summary>
              Looks up a localized string similar to Total files processed       : {0}.
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.TotalMatchesFmt">
            <summary>
              Looks up a localized string similar to Total matches               : {0}.
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.TotalMatchesSizeFmt">
            <summary>
              Looks up a localized string similar to Total matches size          : {0} bytes.
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.TotalSizeFmt">
            <summary>
              Looks up a localized string similar to Total size                  : {0} bytes.
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.TotalTimeFmt">
            <summary>
              Looks up a localized string similar to Total execution time        : {0} ms.
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.UnknownCommandLineOption">
            <summary>
              Looks up a localized string similar to Unknown command line option..
            </summary>
        </member>
        <member name="P:NativeFindFile.Properties.Constants.UsageString">
             <summary>
               Looks up a localized string similar to FF {0}
            (c) 2016, John Robbins/Wintellect - john@wintellect.com
            Find file and directory names fast!
            
            Usage: 
            FF [-regex] [-includedir] [-nostats] [-path &lt;directory&gt;] pattern*
            
            -regex            - Treat the patterns as regular expressions. The default 
                                follows DOS wildcard usage. Make sure to use regex values 
                                in patterns with this flag. (short: -re)
            -includedir       - Include directory names when searching for matches. The 
                                default is on [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:NativeFindFile.SafeFindFileHandle">
            <summary>Wraps up the FindFirstFileEx and FindNextFile handle.</summary>
        </member>
        <member name="M:NativeFindFile.SafeFindFileHandle.#ctor(System.IntPtr,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:NativeFindFile.SafeFindFileHandle" /> class.</summary>
            <param name="handle">The handle.</param>
            <param name="ownsHandle">if set to <c>true</c> [owns handle].</param>
        </member>
        <member name="M:NativeFindFile.SafeFindFileHandle.ReleaseHandle">
            <summary>When overridden in a derived class, executes the code required to free the handle.</summary>
            <returns>
              <span class="keyword">true</span> if the handle is released successfully; otherwise, in the event of a catastrophic failure,
              <span class="keyword">false</span>. In this case, it generates a releaseHandleFailed Managed Debugging Assistant.
            </returns>
        </member>
    </members>
</doc>
